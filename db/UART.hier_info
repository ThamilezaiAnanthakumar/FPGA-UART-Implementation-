|uart
clk => clk.IN2
rstn => rstn.IN2
s_valid => s_valid.IN1
s_data[0] => s_data[0].IN1
s_data[1] => s_data[1].IN1
s_data[2] => s_data[2].IN1
s_data[3] => s_data[3].IN1
s_data[4] => s_data[4].IN1
s_data[5] => s_data[5].IN1
s_data[6] => s_data[6].IN1
s_data[7] => s_data[7].IN1
s_ready << uart_tx:tx_inst.s_ready
tx << uart_tx:tx_inst.tx
rx => rx.IN1
m_valid << uart_rx:rx_inst.m_valid
m_data[0] << uart_rx:rx_inst.m_data
m_data[1] << uart_rx:rx_inst.m_data
m_data[2] << uart_rx:rx_inst.m_data
m_data[3] << uart_rx:rx_inst.m_data
m_data[4] << uart_rx:rx_inst.m_data
m_data[5] << uart_rx:rx_inst.m_data
m_data[6] << uart_rx:rx_inst.m_data
m_data[7] << uart_rx:rx_inst.m_data


|uart|uart_tx:tx_inst
clk => c_clocks[0].CLK
clk => c_clocks[1].CLK
clk => c_clocks[2].CLK
clk => c_clocks[3].CLK
clk => c_clocks[4].CLK
clk => c_clocks[5].CLK
clk => c_clocks[6].CLK
clk => c_clocks[7].CLK
clk => c_clocks[8].CLK
clk => c_clocks[9].CLK
clk => c_clocks[10].CLK
clk => c_clocks[11].CLK
clk => c_clocks[12].CLK
clk => c_bits[0].CLK
clk => c_bits[1].CLK
clk => c_bits[2].CLK
clk => c_bits[3].CLK
clk => s_packet_reg[0].CLK
clk => s_packet_reg[1].CLK
clk => s_packet_reg[2].CLK
clk => s_packet_reg[3].CLK
clk => s_packet_reg[4].CLK
clk => s_packet_reg[5].CLK
clk => s_packet_reg[6].CLK
clk => s_packet_reg[7].CLK
clk => s_packet_reg[8].CLK
clk => s_packet_reg[9].CLK
clk => s_packet_reg[10].CLK
clk => s_packet_reg[11].CLK
clk => s_packet_reg[12].CLK
clk => state.CLK
rstn => c_clocks[0].ACLR
rstn => c_clocks[1].ACLR
rstn => c_clocks[2].ACLR
rstn => c_clocks[3].ACLR
rstn => c_clocks[4].ACLR
rstn => c_clocks[5].ACLR
rstn => c_clocks[6].ACLR
rstn => c_clocks[7].ACLR
rstn => c_clocks[8].ACLR
rstn => c_clocks[9].ACLR
rstn => c_clocks[10].ACLR
rstn => c_clocks[11].ACLR
rstn => c_clocks[12].ACLR
rstn => c_bits[0].ACLR
rstn => c_bits[1].ACLR
rstn => c_bits[2].ACLR
rstn => c_bits[3].ACLR
rstn => s_packet_reg[0].PRESET
rstn => s_packet_reg[1].PRESET
rstn => s_packet_reg[2].PRESET
rstn => s_packet_reg[3].PRESET
rstn => s_packet_reg[4].PRESET
rstn => s_packet_reg[5].PRESET
rstn => s_packet_reg[6].PRESET
rstn => s_packet_reg[7].PRESET
rstn => s_packet_reg[8].PRESET
rstn => s_packet_reg[9].PRESET
rstn => s_packet_reg[10].PRESET
rstn => s_packet_reg[11].PRESET
rstn => s_packet_reg[12].PRESET
rstn => state.ACLR
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => s_packet_reg.OUTPUTSELECT
s_valid => c_bits.OUTPUTSELECT
s_valid => c_bits.OUTPUTSELECT
s_valid => c_bits.OUTPUTSELECT
s_valid => c_bits.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => c_clocks.OUTPUTSELECT
s_valid => state.OUTPUTSELECT
s_data[0] => s_packet_reg.DATAB
s_data[1] => s_packet_reg.DATAB
s_data[2] => s_packet_reg.DATAB
s_data[3] => s_packet_reg.DATAB
s_data[4] => s_packet_reg.DATAB
s_data[5] => s_packet_reg.DATAB
s_data[6] => s_packet_reg.DATAB
s_data[7] => s_packet_reg.DATAB
tx <= s_packet_reg[0].DB_MAX_OUTPUT_PORT_TYPE
s_ready <= state.DB_MAX_OUTPUT_PORT_TYPE


|uart|uart_rx:rx_inst
clk => m_valid~reg0.CLK
clk => m_data[0]~reg0.CLK
clk => m_data[1]~reg0.CLK
clk => m_data[2]~reg0.CLK
clk => m_data[3]~reg0.CLK
clk => m_data[4]~reg0.CLK
clk => m_data[5]~reg0.CLK
clk => m_data[6]~reg0.CLK
clk => m_data[7]~reg0.CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => c_bits[0].CLK
clk => c_bits[1].CLK
clk => c_bits[2].CLK
clk => c_clocks[0].CLK
clk => c_clocks[1].CLK
clk => c_clocks[2].CLK
clk => c_clocks[3].CLK
clk => c_clocks[4].CLK
clk => c_clocks[5].CLK
clk => c_clocks[6].CLK
clk => c_clocks[7].CLK
clk => c_clocks[8].CLK
clk => c_clocks[9].CLK
clk => c_clocks[10].CLK
clk => c_clocks[11].CLK
clk => c_clocks[12].CLK
clk => state~5.DATAIN
rstn => m_valid~reg0.ACLR
rstn => m_data[0]~reg0.ACLR
rstn => m_data[1]~reg0.ACLR
rstn => m_data[2]~reg0.ACLR
rstn => m_data[3]~reg0.ACLR
rstn => m_data[4]~reg0.ACLR
rstn => m_data[5]~reg0.ACLR
rstn => m_data[6]~reg0.ACLR
rstn => m_data[7]~reg0.ACLR
rstn => shift_reg[0].ACLR
rstn => shift_reg[1].ACLR
rstn => shift_reg[2].ACLR
rstn => shift_reg[3].ACLR
rstn => shift_reg[4].ACLR
rstn => shift_reg[5].ACLR
rstn => shift_reg[6].ACLR
rstn => shift_reg[7].ACLR
rstn => c_bits[0].ACLR
rstn => c_bits[1].ACLR
rstn => c_bits[2].ACLR
rstn => c_clocks[0].ACLR
rstn => c_clocks[1].ACLR
rstn => c_clocks[2].ACLR
rstn => c_clocks[3].ACLR
rstn => c_clocks[4].ACLR
rstn => c_clocks[5].ACLR
rstn => c_clocks[6].ACLR
rstn => c_clocks[7].ACLR
rstn => c_clocks[8].ACLR
rstn => c_clocks[9].ACLR
rstn => c_clocks[10].ACLR
rstn => c_clocks[11].ACLR
rstn => c_clocks[12].ACLR
rstn => state~7.DATAIN
rx => shift_reg.DATAB
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
rx => c_clocks.OUTPUTSELECT
m_valid <= m_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data[0] <= m_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data[1] <= m_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data[2] <= m_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data[3] <= m_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data[4] <= m_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data[5] <= m_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data[6] <= m_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data[7] <= m_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


